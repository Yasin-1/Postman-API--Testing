{
	"info": {
		"_postman_id": "06c26950-073f-484b-9258-f8d4181994a5",
		"name": "Example-3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26807132"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\",jsonData.bookingid)\r",
							"\r",
							"pm.test(\"Successfull request = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var totalprice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalprice)\r",
							"pm.environment.set(\"totalprice\",parseInt(totalprice))\r",
							"\r",
							"var depositpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositpaid)\r",
							"pm.environment.set(\"depositpaid\",Boolean(depositpaid))\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"pm.environment.set(\"checkin\",today.add(5,'day').format(\"yyyy-mm-dd\"))\r",
							"pm.environment.set(\"checkout\",today.add(5,'day').format(\"yyyy-mm-dd\"))\r",
							"\r",
							"\r",
							"//console.log(today.format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(5,'day').format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(5,'M').format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(5,'Y').format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.subtrack(5,'day').format(\"YYYY-MM-DD\"))\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstName}}\",\r\n    \"lastname\": \"{{lastName}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": {{depositpaid}},\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Received",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"switch(code){\r",
							"case 200:\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"    pm.test(\"First Name Validation\", function(){\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Last Name Validation\", function(){\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"    pm.test(\"totalprice\", function(){\r",
							"    pm.expect(jsonData.totalprice).to.eql(pm.environment.get(\"totalprice\"))\r",
							"})\r",
							"\r",
							"\r",
							"    pm.test(\"depositpaid\", function(){\r",
							"    pm.expect(jsonData.depositpaid).to.eql(pm.environment.get(\"depositpaid\"))\r",
							"})\r",
							"break;\r",
							"\r",
							"case 404:\r",
							"pm.test(\"Not Found\")\r",
							"\r",
							"default:\r",
							"pm.test(\"Something Wen't Wrong..........!\")\r",
							"\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": [
				{
					"name": "Received",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1733516511&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=na35xLroFKcSBhrLePuHjAC1qayhqxXVyu2B5XwkjGw%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1733516511&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=na35xLroFKcSBhrLePuHjAC1qayhqxXVyu2B5XwkjGw%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "172"
						},
						{
							"key": "Etag",
							"value": "W/\"ac-xYACzW2HipIGs0S5Elx2kbKlgrA\""
						},
						{
							"key": "Date",
							"value": "Fri, 06 Dec 2024 20:21:51 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"firstname\": \"Aisha\",\n    \"lastname\": \"Barton\",\n    \"totalprice\": 696,\n    \"depositpaid\": false,\n    \"bookingdates\": {\n        \"checkin\": \"2024-12-12\",\n        \"checkout\": \"2024-12-17\"\n    },\n    \"additionalneeds\": \"Breakfast\"\n}"
				}
			]
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var tokenData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\",tokenData.token)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"username\": \"admin\",\r\n\"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstname\": \"Yasin\",\r\n  \"lastname\": \"Miazi\",\r\n  \"totalprice\": {{totalprice}},\r\n  \"depositpaid\": {{depositpaid}},\r\n  \"bookingdates\": {\r\n    \"checkin\": \"2024-11-27\",\r\n    \"checkout\": \"2024-11-29\"\r\n  },\r\n  \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Received Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"First Name Validation\", function(){\r",
							"pm.expect(jsonData.firstname).to.eql(\"Yasin\")\r",
							"})\r",
							"\r",
							"pm.test(\"check in\", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(\"2024-11-27\")\r",
							"})\r",
							"\r",
							"pm.test(\"deposit paid\", function(){\r",
							"    pm.expect(jsonData.depositpaid).to.eql(true)\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}